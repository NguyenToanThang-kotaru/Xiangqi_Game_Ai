import requests
import mysql.connector
import re
import time

# ====== C·∫•u h√¨nh MySQL ======
DB_CONFIG = {
    "host": "localhost",
    "user": "root",
    "password": "",
    "database": "xiangqi"
}

# ====== K·∫øt n·ªëi MySQL ======
class DBManager:
    def __init__(self):
        try:
            self.conn = mysql.connector.connect(**DB_CONFIG)
            self.cursor = self.conn.cursor()
            print("‚úÖ K·∫øt n·ªëi MySQL th√†nh c√¥ng!")
        except mysql.connector.Error as err:
            print(f"‚ùå L·ªói k·∫øt n·ªëi MySQL: {err}")
            self.conn = None

    def insert_training_data(self, game_id, move_number, prev_fen, move, new_fen, score, player):
        """L∆∞u d·ªØ li·ªáu n∆∞·ªõc ƒëi v√†o b·∫£ng training_data"""
        if not self.conn:
            print("‚ö†Ô∏è Kh√¥ng c√≥ k·∫øt n·ªëi MySQL, b·ªè qua vi·ªác l∆∞u d·ªØ li·ªáu.")
            return
        
        result = "win" if score > 0 else "loss" if score < 0 else "draw"
        
        try:
            insert_query = """
                INSERT INTO training_data (game_id, move_number, prev_fen, move, new_fen, score, player, result, frequency) 
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            self.cursor.execute(insert_query, (game_id, move_number, prev_fen, move, new_fen, score, player, result, 1))
            self.conn.commit()
            print(f"‚úÖ Th√™m m·ªõi: {prev_fen} -> {move} -> {new_fen} ({result})")
        except mysql.connector.Error as err:
            print(f"‚ùå L·ªói MySQL khi ch√®n d·ªØ li·ªáu: {err}")

    def close(self):
        """ƒê√≥ng k·∫øt n·ªëi MySQL."""
        if self.conn:
            self.cursor.close()
            self.conn.close()
            print("üîå K·∫øt n·ªëi MySQL ƒë√£ ƒë√≥ng.")

# ====== L·∫•y n∆∞·ªõc ƒëi t·ªët nh·∫•t t·ª´ API ======
def get_best_move(fen):
    """G·ª≠i FEN l√™n API v√† l·∫•y n∆∞·ªõc ƒëi t·ªët nh·∫•t"""
    url = f"http://www.chessdb.cn/chessdb.php?action=queryall&board={fen}"
    try:
        response = requests.get(url, timeout=10)
        if response.status_code == 200 and response.text.strip():
            match = re.search(r"move:([a-z0-9]+),score:([-]?\d+)", response.text)
            if match:
                return match.group(1), int(match.group(2))  # (N∆∞·ªõc ƒëi, ƒêi·ªÉm s·ªë)
    except requests.exceptions.RequestException as e:
        print(f"‚ùå L·ªói API: {e}")
    return None, None

# ====== L∆∞u d·ªØ li·ªáu n∆∞·ªõc ƒëi ======
def simulate_game(initial_fen, db, game_id, max_moves=50):
    """L·∫•y n∆∞·ªõc ƒëi t·ª´ API v√† l∆∞u v√†o database"""
    current_fen = initial_fen
    player = "red"  # B·∫Øt ƒë·∫ßu v·ªõi b√™n ƒë·ªè
    
    print(f"üèÅ B·∫Øt ƒë·∫ßu v√°n c·ªù m·ªõi! Game ID: {game_id}")
    print(f"üìå Tr·∫°ng th√°i kh·ªüi ƒë·∫ßu: {current_fen}")
    
    for move_count in range(1, max_moves + 1):
        best_move, score = get_best_move(current_fen)
        if not best_move:
            print("‚ùå Kh√¥ng t√¨m ƒë∆∞·ª£c n∆∞·ªõc ƒëi h·ª£p l·ªá! D·ª´ng tr√≤ ch∆°i.")
            break

        # Gi·∫£ l·∫≠p tr·∫°ng th√°i FEN m·ªõi b·∫±ng c√°ch th√™m n∆∞·ªõc ƒëi
        new_fen = f"{current_fen} -> {best_move}"
        
        # L∆∞u d·ªØ li·ªáu v√†o MySQL
        db.insert_training_data(game_id, move_count, current_fen, best_move, new_fen, score, player)
        
        current_fen = new_fen  # C·∫≠p nh·∫≠t tr·∫°ng th√°i m·ªõi
        player = "black" if player == "red" else "red"  # ƒê·ªïi b√™n ƒëi
        time.sleep(1)  # Ngh·ªâ 1 gi√¢y tr∆∞·ªõc l∆∞·ª£t ti·∫øp theo
    
    print("üèÜ Tr√≤ ch∆°i k·∫øt th√∫c!")

# ====== Ch·∫°y ch∆∞∆°ng tr√¨nh ======
if __name__ == "__main__":
    db = DBManager()
    if db.conn:
        initial_fen = "rnbakabnr/9/1c5c1/p1p1p1p1p/9/9/P1P1P1P1P/1C2B2C1/9/RNBAKA1NR b"
        game_id = int(time.time())  # S·ª≠ d·ª•ng timestamp l√†m game_id
        simulate_game(initial_fen, db, game_id)
        db.close()